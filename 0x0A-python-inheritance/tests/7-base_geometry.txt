#!/usr/bin/python3
>>> class BaseGeometry(object):
...		def __init__(self):
...			pass
...		def area(self):
...			raise Exception("area() is not implemented")
...		def integer_validator(self, name, value):
...			if not isinstance(value, int):
...				raise TypeError(f"{name} must be an integer")
...			if value <= 0:
...				raise ValueError(f"{name} must be greater than 0")

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("my_int", "val")
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0
